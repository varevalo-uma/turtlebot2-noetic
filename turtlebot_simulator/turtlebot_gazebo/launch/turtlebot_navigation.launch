<launch>

  <arg name="gui"        default="false"/>
  <arg name="world_file" default="$(env TURTLEBOT_GAZEBO_WORLD_FILE)"/>
  <arg name="base"       default="$(env TURTLEBOT_BASE)"/>  <!-- kobuki -->
  <arg name="stacks"     default="$(env TURTLEBOT_STACKS)"/>  <!-- circles, hexagons -->
  <arg name="3d_sensor"  default="$(env TURTLEBOT_3D_SENSOR)"/>  <!-- hokuyo, kinect, asus_xtion_pro, r200 -->

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg world_file)"/>
  </include>

  <arg name="urdf_file" default="$(find xacro)/xacro '$(find turtlebot_description)/robots/kobuki_$(arg stacks)_$(arg 3d_sensor).urdf.xacro'"/>
  <param name="robot_description" command="$(arg urdf_file)"/>

  <!-- Gazebo model spawner -->
  <node name="spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model"
        args="$(optenv ROBOT_INITIAL_POSE) -unpause -urdf -param robot_description -model mobile_base"/>

  <!-- Velocity muxer -->
  <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
        args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
    <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml"/>
    <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
  </node>

  <!-- Bumper/cliff to pointcloud (not working, as it needs sensors/core messages) -->
  <include file="$(find turtlebot_bringup)/launch/includes/kobuki/bumper2pc.launch.xml"/>

  <node name="map_server" pkg="map_server" type="map_server" args="$(find turtlebot_gazebo)/maps/playground.yaml" />

  <!-- Localization -->
  <node pkg="amcl" type="amcl" name="amcl">
	<remap from="scan" to="/scan"/>
	<param name="odom_frame_id" value="odom"/>
	<param name="odom_model_type" value="diff-corrected"/>
	<param name="base_frame_id" value="base_link"/>
	<param name="update_min_d" value="0.1"/>
	<param name="update_min_a" value="0.2"/>
	<param name="min_particles" value="500"/>
  </node>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" >
    <rosparam file="$(find turtlebot_gazebo)/config/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
    <rosparam file="$(find turtlebot_gazebo)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find turtlebot_gazebo)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_gazebo)/config/global_costmap_params.yaml" command="load" /> 
    <rosparam file="$(find turtlebot_gazebo)/config/base_local_planner_params.yaml" command="load" />

    <remap from="cmd_vel" to="/cmd_vel_mux/input/navi"/>

  </node>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" >
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot_rviz_launchers)/rviz/navigation.rviz"/>

<!--  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot_rviz_launchers)/rviz/navigation_app.rviz"/>
-->

  <!-- turtlebot_teleop_key already has its own built in velocity smoother -->
<!--  <node pkg="turtlebot_teleop" type="turtlebot_teleop_key" name="turtlebot_teleop_keyboard"  output="screen">
    <param name="scale_linear" value="0.5" type="double"/>
    <param name="scale_angular" value="1.5" type="double"/>
    <remap from="turtlebot_teleop_keyboard/cmd_vel" to="cmd_vel_mux/input/teleop"/>
  </node>
-->
</launch>
